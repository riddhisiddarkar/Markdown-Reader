{"version":3,"sources":["MarkdownContext.js","components/MarkDown.jsx","components/Result.jsx","App.js","reportWebVitals.js","index.js"],"names":["defaultContext","markdowntext","setMarkdowntext","React","createContext","MarkDown","useContext","MarkdownContext","className","onChange","e","newValue","currentTarget","value","Result","source","App","useState","contextValue","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEMA,G,MAAiB,CACnBC,aAAc,GACdC,gBAAiB,eAINC,MAAMC,cAAcJ,G,MCUpBK,MAdf,WAAqB,IACVH,EAAoBI,qBAAWC,GAA/BL,gBAKP,OACI,sBAAKM,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,2BACI,0BAAUC,SAPA,SAACC,GACnB,IAAMC,EAAWD,EAAEE,cAAcC,MACjCX,EAAgBS,IAK2BH,UAAU,iB,iBCG9CM,MAZf,WAAmB,IACRb,EAAgBK,qBAAWC,GAA3BN,aACP,OACI,sBAAKO,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,oBACA,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CAAeO,OAAQd,UCkBxBe,MAtBf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBAEPC,EAAe,CACnBjB,aAHW,KAIXC,gBAJW,MAMb,OACE,cAACK,EAAgBY,SAAjB,CAA0BN,MAAOK,EAAjC,SACE,sBAAKV,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,6BAGA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,aCRKY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a7a088f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst defaultContext = {\r\n    markdowntext: \"\",\r\n    setMarkdowntext: () => {\r\n        \r\n    },\r\n}\r\nexport default React.createContext(defaultContext);","import MarkdownContext from \"../MarkdownContext\"\r\nimport \"./Markdown.css\"\r\nimport { useContext } from \"react\"\r\n\r\nfunction MarkDown() {\r\n    const {setMarkdowntext } = useContext(MarkdownContext);\r\n    const onInputChange = (e) => {\r\n        const newValue = e.currentTarget.value;\r\n        setMarkdowntext(newValue)\r\n    }\r\n    return (\r\n        <div className=\"markdownreader\">\r\n            <div className=\"title\">Markdown text</div>\r\n                <textarea onChange={onInputChange} className=\"textarea\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarkDown\r\n","import React, { useContext } from 'react'\r\nimport \"./Markdown.css\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport MarkdownContext from '../MarkdownContext'\r\nfunction Result() {\r\n    const {markdowntext} = useContext(MarkdownContext)\r\n    return (\r\n        <div className=\"markdownreader\">\r\n            <div className=\"title\">Result</div>\r\n            <div className=\"textarea\">\r\n                <ReactMarkdown source={markdowntext} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import {useState} from \"react\"\nimport './App.css';\nimport MarkDown from './components/MarkDown';\nimport Result from './components/Result';\nimport MarkdownContext from \"./MarkdownContext\";\n\nfunction App() {\n  const [markdowntext, setMarkdowntext] = useState(\"\")\n  const contextValue = {\n    markdowntext,\n    setMarkdowntext\n  }\n  return (\n    <MarkdownContext.Provider value={contextValue}>\n      <div className=\"App\">\n        <h1 className=\"title\">\n          Markdown Editor\n        </h1>\n        <div className=\"editorcontainer\">\n          <MarkDown />\n          <Result />\n        </div>\n      </div>\n    </MarkdownContext.Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}